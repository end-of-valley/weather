#!/bin/bash

name: Scrape latest data

on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '1,16,31,46 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
    - name: Fetch latest data
      run: |-
        File="PLACES__County_Data__GIS_Friendly_Format___2021_release.csv"
        mkdir -p forecastGridData
        cat $File| sed 1d | awk -F'"' -v OFS='' '{ for (i=2; i<=NF; i+=2) gsub(",", "", $i) } 1' |while read line
        do
            TotalPopulation=$( echo $line | cut -d',' -f5 )
          if [ $TotalPopulation -gt 1000000 ]
          then
            StateAbbr=$( echo $line | cut -d',' -f1 )
            CountyName=$( echo $line | cut -d',' -f3 )
            coor=$( echo $line | cut -d',' -f126 )
            long=$( echo $coor | tr '()' ' '| cut -d' ' -f3 )
            lat=$( echo $coor | tr '()' ' '| cut -d' ' -f4 )
            url=$(printf "https://api.weather.gov/points/%.4f,%.4f" "$lat" "$long")
            info=$(curl $url --compressed )
            urldata=$(echo $info | grep -zoP '(?<=forecastGridData\": \").*(?=\",\s\"obs)')
            curl $urldata --compressed  > "forecastGridData/${StateAbbr}_${CountyName}.json"
          fi
        done
    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u --rfc-3339=seconds)
        git commit -m "Latest data (UTC): ${timestamp}" || exit 0
        git push
